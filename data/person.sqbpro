<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/home/kestas/codeacademy/ptu5/ptu5_intro_kursas/data/person.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="973"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainperson"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="person" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="87"/><column index="3" value="195"/><column index="4" value="145"/><column index="5" value="61"/><column index="6" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- ištraukiam visus duomenis
SELECT * FROM person;
-- ištraukiam tik vardus ir lytis
SELECT first_name, gender FROM person;
-- išrenkam unikalius gender
SELECT DISTINCT gender FROM person;
-- WHERE užklausos tikslinimas
SELECT * FROM person WHERE gender = &quot;Female&quot;;
-- sąlygose naudojamos datos
SELECT * FROM person WHERE date_of_birth &gt; date('1992-10-11');
-- loginės sąlygos
SELECT * FROM person WHERE date_of_birth &gt; date('1994-10-11') AND gender = &quot;Female&quot;;
-- rūšiavimas
SELECT * FROM person WHERE gender = &quot;Female&quot; ORDER BY date_of_birth DESC;
-- rūšiavimas pagal kelis stulpelius
SELECT * FROM person ORDER BY gender, last_name;
-- grupavimas, išrenkant reikiamus duomenis
SELECT gender, count(*) AS &quot;count&quot;, min(date_of_birth) AS oldest, max(date_of_birth) as youngest FROM person GROUP BY gender;
</sql><sql name="SQL 3">SELECT * FROM person
GROUP BY
	last_name,
	first_name
HAVING
	date_of_birth
		BETWEEN
			date('1983-01-01')
		AND
			date('1999-01-01')
;
</sql><sql name="SQL 4">-- SELECT * FROM person LIMIT 1;
-- Duomenų įterpimas
INSERT INTO person
	(first_name, last_name, email, date_of_birth, gender, company)
VALUES 
	(
		&quot;Justina&quot;, 
		&quot;Zymonaitė&quot;, 
		&quot;justina@gmail.com&quot;, 
		datetime('2000-01-01 00:00:07'), 
		&quot;Female&quot;, 
		&quot;Žiedų valdovai&quot;
	);
</sql><sql name="SQL 8">-- duomenų redagavimas
UPDATE person SET date_of_birth = datetime('1988-10-27 12:00:00') WHERE first_name=&quot;Justina&quot;;
</sql><sql name="SQL 9">-- SELECT * FROM person WHERE gender=&quot;Female&quot; and date_of_birth &gt; date('1997-01-01')
UPDATE person SET company=&quot;Middle of Nowhere oy&quot; WHERE gender=&quot;Female&quot; and date_of_birth &gt; date('1997-01-01')
</sql><sql name="SQL 10">-- SELECT * FROM person WHERE NOT company = &quot;Middle of Nowhere oy&quot;;
DELETE FROM person WHERE NOT company = &quot;Middle of Nowhere oy&quot;;
SELECT * FROM person;
</sql><sql name="SQL 11">DELETE FROM person;
SELECT * FROM person;
DROP TABLE person;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
